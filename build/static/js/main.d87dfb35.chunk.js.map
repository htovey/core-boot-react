{"version":3,"sources":["components/LoginFormDialog.js","utils/FetchUtil.js","components/LoginComponent.js","constants/Categories.js","components/NoteFormDialog.js","components/NoteComponent.js","components/NoteListToolbarSelect.js","components/NoteListComponent.js","App.js","serviceWorker.js","index.js"],"names":["LoginFormDialog","props","handleSubmit","e","preventDefault","handleClick","state","loginModel","username","password","prevProps","prevState","snapshot","error","this","setState","StyledContent","withStyles","root","color","DialogContentText","Dialog","open","openLogin","onClose","handleClose","aria-labelledby","DialogContent","TextField","autoFocus","margin","name","required","value","onChange","target","label","fullWidth","variant","DialogActions","Button","onClick","Component","handleGet","url","userToken","fetch","method","headers","handlePost","payload","body","JSON","stringify","LoginComponent","validLogin","login","handleError","event","base64","encode","FetchUtil","then","response","json","console","log","handleSuccess","catch","toggleError","styleClass","message","CATEGORIES","NoteFormDialog","getCategories","note","populateNoteModel","noteModel","categoryInput","category","noteTextInput","noteText","openNote","Select","defaultValue","map","i","key","NoteComponent","validNote","noteBody","noteId","user","status","NoteListToolbarSelect","handleDelete","getNoteIdList","selectedRows","handleUpdate","getNotePayload","editNote","updateNote","noteList","data","index","createUpdateNote","deleteArray","selectedNote","classes","multiSelect","length","className","divHeight","Tooltip","title","IconButton","iconButton","disabled","editIcon","deleteIcon","marginRight","top","transform","height","NoteListComponent","options","filter","filterType","responsive","selectableRows","customToolbarSelect","notes","columns","display","App","handleLoginSuccess","buildNoteList","getFormattedDate","toggleNoteList","handleSaveSuccess","snackBarOpen","refreshNoteList","isNoteListHidden","updateNoteModel","dateFormatter","saveDate","push","rawDate","Date","toLocaleString","day","month","weekday","hour","minute","timeZoneName","timeZone","closeSnackBar","closeNote","vertical","horizontal","primaryText","Snackbar","anchorOrigin","autoHideDuration","elevation","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d87dfb35.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MuiThemeProvider from 'material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport '../styles/App.css';\nimport { withStyles } from '@material-ui/styles';\nimport LoginModel from '../models/LoginModel';\n\nexport default class LoginFormDialog extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state={\n       loginModel: {\n         username: 'ht3',\n         password: 'hockey'\n       }\n    }\n   }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.error !== this.props.error) {\n       this.setState({\n         loginModel: {\n           username: '',\n           password: ''\n         }\n       });\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();   \n    // this.setState({\n    //   model: {\n    //     username: this.userRef,\n    //     password: this.passwordRef\n    //   }\n    // }); \n    this.props.handleClick(this.state.loginModel, e);\n  //  this.setState({loginModel: {}});\n  }\n  \n  render () {\n    const StyledContent = withStyles({root: {color : 'red'}})(DialogContentText);\n    return (\n     \n        <Dialog open={this.props.openLogin} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n          {/* <DialogTitle id=\"form-dialog-title\">Login to Notes</DialogTitle> */}\n          <DialogContent>\n            <StyledContent>\n              {this.props.error}\n            </StyledContent>\n            \n            <TextField\n              autoFocus\n              margin=\"dense\"\n              name=\"username\"\n              required\n              value={this.state.loginModel.username}\n              onChange={(e) => this.setState({\n                loginModel: {\n                  username: e.target.value, \n                  password: this.state.loginModel.password ||''\n                }})}\n              label=\"User Id\"\n              fullWidth\n              variant=\"outlined\"\n            />\n             <TextField\n              margin=\"dense\"\n              name=\"password\"\n              required\n              value={this.state.loginModel.password}\n              onChange={(e) => this.setState({\n                loginModel: {\n                  username: this.state.loginModel.username, \n                  password :e.target.value\n                }})}\n              label=\"Password\"\n              fullWidth\n              variant=\"outlined\"\n            />\n         \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Login\n            </Button>\n          </DialogActions>\n        </Dialog>\n       \n    );\n    }\n  }"," const handleGet = (url, userToken) => {\n    var result =  fetch( url, {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\" : \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Authorization\" : userToken,\n            \"Connection\": \"close\"\n        }\n    });\n   \n    return result;\n}\n\nconst handlePost = (url, userToken, payload) => {\n   var result = fetch( url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\" : \"application/json\",\n            \"Accept\": \"text/html;charset=UTF-8\",\n            \"Authorization\" : userToken\n        },\n        body: JSON.stringify(payload)\n    });\n\n    return result;\n}\n\nexport default {handleGet, handlePost}","import React, {Component} from 'react';\nimport LoginFormDialog  from './LoginFormDialog';\nimport '../styles/App.css';\nimport fetch from 'node-fetch';\nimport { MuiThemeProvider } from 'material-ui/styles';\nimport  base64  from 'base-64';\nimport { booleanLiteral } from '@babel/types';\nimport FetchUtil from '../utils/FetchUtil';\n\n\nclass LoginComponent extends Component {\n    //1) setup our state using constructor\n    \n    constructor(props) {\n        super(props);\n        this.state={\n            toggleError: 'false',\n            styleClass: 'showMe',\n            error: ''\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log('LoginComponent componentDidUpdate()');\n        if (prevProps.openLogin !== this.props.openLogin) {\n           this.setState({openLogin: this.props.openLogin});\n        }\n    }\n\n    handleError(message) {\n        console.log('LoginComponent handleError()');\n        if(this.props.openLogin === true) {\n            this.setState({ error: message});\n        }\n    }\n\n    validLogin = (login) => {\n        if (!login.username && !login.password) {\n            this.handleError('Please enter User Id and Password.');\n            return false;\n        } else if (!login.username) {\n            this.handleError('Please enter a User Id.');    \n        } else if (!login.password) {\n            this.handleError('Please enter a Password');\n        }else {\n            //make sure any previous error is cleared\n            this.setState({error: ''});\n            return true;\n        }\n    }\n\n    handleClick = (login, event) => {\n        if (this.validLogin(login)) {\n            event.preventDefault();\n            //build login payload\n            const loginUrl = \"http://localhost:8080/getNotesForUser\";\n            const userToken = \"Basic \"+base64.encode(login.username+\":\"+login.password)\n            var response = FetchUtil.handleGet(loginUrl, userToken);\n            response\n            .then(response => response.json())\n            .then(json => {\n                console.log(\"LoginComponent handleClick() response\");\n                this.props.handleSuccess(json, userToken, false);\n            })    \n            .catch((error) => {\n                this.handleError('Login failed. Please try again.');\n            });\n        }\n    } //end handleClick()\n\n    render() {\n       \n        return (\n            <div>       \n                <div>     \n                <LoginFormDialog \n                    openLogin={this.props.openLogin} \n                    error={this.state.error} \n                    styleClass={this.styleClass} \n                    handleClick={this.handleClick}\n                    />\n                </div>        \n            </div>\n        );\n    }\n}\nexport default LoginComponent;","export const CATEGORIES = [\"Java\", \"JavaScript\", \"React\", \"Angular\"]\n   \n\n","import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MuiThemeProvider from 'material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport '../styles/App.css';\nimport { withStyles } from '@material-ui/styles';\nimport NoteModel from '../models/NoteModel';\nimport { Select, MenuItem } from '@material-ui/core';\nimport { CATEGORIES } from '../constants/Categories'\n\nexport default class NoteFormDialog extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state={\n      categoryInput: '',\n      noteTextInput: ''\n    }\n   }\n \n  getCategories = () => {\n    var catList = CATEGORIES;\n    return catList;\n  }\n\n  handleSubmit = (e) => {\n      e.preventDefault();\n      var note = this.populateNoteModel();\n      this.props.handleSubmit(note, e);  \n      //this.setState({noteModel: {}});\n  }\n\n  populateNoteModel = () => {\n    var noteModel = this.props.noteModel;\n    \n    if (this.state.categoryInput) {\n      noteModel.category = this.state.categoryInput;\n    }\n\n    if (this.state.noteTextInput) {\n      noteModel.noteText = this.state.noteTextInput;\n    }  \n\n    return noteModel;\n  }\n  \n  render () {\n    const StyledContent = withStyles({root: {color : 'red'}})(DialogContentText);\n    return (\n     \n        <Dialog open={this.props.openNote} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n          {/* <DialogTitle id=\"form-dialog-title\">Login to Notes</DialogTitle> */}\n          <DialogContent>\n            <StyledContent>\n              {this.props.error}\n            </StyledContent>\n           \n            <Select \n                name=\"category\" \n                defaultValue={this.props.noteModel.category || ''} \n                label=\"Category\"\n                onChange={(e) => this.setState({categoryInput: e.target.value})}>\n               { \n                   CATEGORIES.map(function(category, i) {\n                    return <MenuItem key={i} value={category}>{category}</MenuItem>\n                    })\n                } \n            </Select>\n             <TextField\n              margin=\"dense\"\n              name=\"noteText\"\n              required\n              defaultValue={this.props.noteModel.noteText || ''}\n              onChange={(e) => this.setState({noteTextInput: e.target.value})}\n              label=\"Note\"\n              fullWidth\n              variant=\"outlined\"\n            />\n         \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n                Save\n            </Button>\n            <Button onClick={this.props.handleClose}>\n                Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n       \n    );\n    }\n  }","import React, {Component} from 'react';\nimport NoteFormDialog  from './NoteFormDialog';\nimport '../styles/App.css';\nimport fetch from 'node-fetch';\nimport { MuiThemeProvider } from 'material-ui/styles';\nimport  base64  from 'base-64';\nimport { booleanLiteral } from '@babel/types';\nimport FetchUtil from '../utils/FetchUtil';\n\n\nclass NoteComponent extends Component {\n    //1) setup our state using constructor\n    \n    constructor(props) {\n        super(props);\n        this.state={\n            toggleError: 'false',\n            styleClass: 'showMe',\n            error: ''\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log('NoteComponent componentDidUpdate()');\n        if (prevProps.openNote !== this.props.openNote) {\n           this.setState({openNote: this.props.openNote});\n        //    this.setState({\n        //     noteModel: {\n        //       noteId: '',  \n        //       category: '',\n        //       noteText: ''\n        //     }\n        //   });\n        }\n        if (prevProps.user !== this.props.user) {\n            this.setState({user: this.props.user});\n        }\n    }\n\n    handleError(message) {\n        console.log('NoteComponent handleError()');\n        if(this.props.openNote === true) {\n            this.setState({ error: message});\n        }\n    }\n\n    validNote = (note) => {\n        if (!note.category && !note.noteText) {\n            this.handleError('Please provide Category and text input');\n            return false;\n        } else if (!note.category) {\n            this.handleError('Please select a category.');    \n        } else if (!note.noteText) {\n            this.handleError('Please enter note text');\n        }else {\n            //make sure any previous error is cleared\n            this.setState({error: ''});\n            return true;\n        }\n    }\n\n    handleSubmit = (note, event) => {\n        if (this.validNote(note)) {\n            event.preventDefault();\n            //build note payload\n            const noteUrl = \"http://localhost:8080/createUpdateNote\";\n            const noteBody =  {\n                \"noteId\": note.noteId,\n                \"category\": note.category,\n                \"noteText\": note.noteText\n            }\n            var response = FetchUtil.handlePost(noteUrl, this.props.user, noteBody)\n                .then(response => {\n                    if (response.status === 200) {\n                        console.log(\"Success***\");\n                        this.props.handleSuccess();\n                    }\n                })\n                 \n                .catch((error) => {\n                    console.log(error);\n                    this.handleError('Save failed. Please try again.');\n                });\n            \n        }\n    } //end handleSubmit()\n\n    render() {\n       \n        return (\n            <div>       \n                <div>     \n                <NoteFormDialog \n                    openNote={this.props.openNote} \n                    error={this.state.error} \n                    styleClass={this.styleClass} \n                    handleSubmit={this.handleSubmit}\n                    noteModel={this.props.noteModel}\n                    handleClose={this.props.handleClose}\n                    />\n                </div>        \n            </div>\n        );\n    }\n}\nexport default NoteComponent;","import React, {Component} from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { withStyles } from '@material-ui/styles';\nimport FetchUtil from '../utils/FetchUtil';\nimport NoteComponent from './NoteComponent';\n\n\nconst defaultToolbarSelectStyles = {\n    iconButton: {\n      marginRight: \"24px\",\n      top: \"40%\",\n    //   display: \"inline-block\",\n    //   position: \"relative\",\n      transform: \"translateY(-50%)\"\n    },\n    deleteIcon: {\n      color: \"#000\"\n    },\n    editIcon: {\n        color: \"#000\"\n    },\n    divHeight: {\n        height: \"40px\"\n    }\n  };\n  \n\nclass NoteListToolbarSelect extends Component {\n    \n    handleDelete = () => {\n        var url = \"http://localhost:8080/deleteNote\";\n        var body = this.getNoteIdList(this.props.selectedRows)\n        var result = FetchUtil.handlePost(url, this.props.userToken, body)\n        .then(response => {\n            if (response.status === 200) {\n                console.log(\"Delete: Success***\");\n                this.props.handleSuccess();\n            }\n        })\n         \n        .catch((error) => {\n            console.log(error);\n           // this.handleError('Delete failed. Please try again later.');\n        });\n    }\n\n    handleUpdate = () => {\n        var url = \"http://localhost:8080/createUpdateNote\";\n        var body = this.getNotePayload(this.props.selectedRows)\n        var result = FetchUtil.handlePost(url, this.props.userToken, body)\n        .then(response => {\n            if (response.status === 200) {\n                console.log(\"Delete: Success***\");\n                this.props.handleSuccess();\n            }\n        })\n         \n        .catch((error) => {\n            console.log(error);\n           // this.handleError('Delete failed. Please try again later.');\n        });\n    }\n\n    editNote = () => {\n        var updateNote = this.props.noteList[this.props.selectedRows.data[0].index];\n        this.props.createUpdateNote(updateNote);\n    }\n\n    getNoteIdList = (selectedRows) => {\n        var deleteArray = [];\n        selectedRows.data.map((selectedNote, index) => {\n             var note =  this.props.noteList[selectedNote.index];\n             deleteArray[index] = note.noteId;\n        });\n        return deleteArray;\n    }\n\n    getNotePayload = (note) => {\n        var updateNote = [];\n        updateNote.noteId = note.noteId;\n        updateNote.category = note.category;\n        updateNote.noteText = note.noteText;\n        return updateNote;\n    }\n\n    render() {\n        const { classes } = this.props;\n        var multiSelect = this.props.selectedRows.data.length > 1;\n        return (\n            <div className={classes.divHeight}>\n               <Tooltip title={\"Edit\"}>\n                    <IconButton className={classes.iconButton} disabled={multiSelect} onClick={this.editNote}>\n                        {!multiSelect && <EditIcon className={classes.editIcon} />}\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={\"Delete\"}>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <DeleteIcon className={classes.deleteIcon} />\n                    </IconButton>\n                </Tooltip>\n                {this.props.openNote && <NoteComponent \n                openNote={true} \n                handleSubmit={this.props.handleSubmit}\n                noteModel={this.updateNote}\n                />  }\n            </div>\n        );\n    }\n}\n\nexport default withStyles(defaultToolbarSelectStyles, {\n    name: \"NoteListToolbarSelect\"\n})(NoteListToolbarSelect);\n\n// export default NoteListToolbarSelect;","import React from 'react';\nimport MUIDataTable from 'mui-datatables';\nimport NoteListToolbarSelect from './NoteListToolbarSelect'\n\nexport default function NoteListComponent(props) {\n    const columns = [\n        {\n            name: \"noteId\",\n            label: \"Note Id\",\n            options: {\n                display: 'excluded'\n            }\n        },\n        {\n            name: \"category\",\n            label: \"Category\",\n            options: {\n                filter: true\n            }\n        },\n        {\n            name: \"noteText\",\n            label: \"Note\",\n            options: {\n                filter: true\n            }\n        },\n        {\n            name: \"lastUpdated\",\n            label: \"Last Updated\",\n            options: {\n                filter: true\n            }\n        }\n    ];\n\n    const options = {\n        filter: true,\n        filterType: \"dropdown\",\n        responsive: \"scroll\",\n        selectableRows: true,\n        customToolbarSelect: selectedRows => (\n            <NoteListToolbarSelect \n                handleSubmit={props.handleSubmit} \n                handleSuccess={props.handleSuccess} \n                noteList={props.notes} \n                userToken={props.userToken} \n                selectedRows={selectedRows}\n                createUpdateNote={props.createUpdateNote}/>\n        )\n      };\n\n    return (\n        \n        <MUIDataTable \n            data={props.notes}\n            columns={columns}\n            options={options}\n        />\n    )\n}","import React, { Component } from 'react';\nimport './styles/App.css';\nimport AppBar from 'material-ui/AppBar';\nimport MenuItem from 'material-ui/MenuItem'\nimport LoginComponent from './components/LoginComponent';\nimport NoteComponent from './components/NoteComponent';\nimport NoteListComponent from './components/NoteListComponent';\nimport { MuiThemeProvider } from 'material-ui/styles';\nimport FetchUtil from './utils/FetchUtil';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport NoteModel from './models/NoteModel';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      noteList: [],\n      openLogin: true,\n      openNote: false,\n      isNoteListHidden: true,\n      userToken: '',\n      snackBarOpen: false,\n      vertical: 'top',\n      horizontal: 'center',\n      noteModel: {\n        noteId: '',\n        category: '',\n        noteText: ''\n      }\n    }\n  }\n\n  handleLoginSuccess = (notes, user, openLogin) => {\n    console.log('handleLoginSuccess()');\n    this.setState({userToken: user});\n    this.setState({openLogin: openLogin});\n    this.setState({noteList: this.buildNoteList(notes, this.getFormattedDate)});\n    this.toggleNoteList();\n  }\n\n  handleSaveSuccess = () => {\n    console.log('handleSaveSuccess');\n    this.setState({openNote : false});\n    this.setState({snackBarOpen: true});\n    this.refreshNoteList();\n  }\n\n  refreshNoteList = () => {\n    var url = \"http://localhost:8080/getNotesForUser\"\n    var result = FetchUtil.handleGet(url, this.state.userToken);\n    result\n    .then(response => response.json())\n    .then(json => {\n      this.setState({noteList: this.buildNoteList(json, this.getFormattedDate)});\n    })\n    .catch((error) => {\n      return error;\n    });\n  }\n\n  toggleNoteList = () => {\n    if (this.state.isNoteListHidden == true) {\n      this.setState({isNoteListHidden: false});\n    } else {\n      this.setState({isNoteListHidden: true});\n    }\n  }\n\n  createUpdateNote = (updateNoteModel) => {\n    if (updateNoteModel) {\n      this.setState({noteModel: {\n        noteId: updateNoteModel.noteId,\n        category: updateNoteModel.category,\n        noteText: updateNoteModel.noteText\n      }});\n    }\n    this.setState({openNote: true});\n  }\n\n  buildNoteList = (notes, dateFormatter) => {\n    var noteList = [];\n    notes.map(function(note) { \n      note.saveDate = dateFormatter(note.saveDate);\n      noteList.push(note);\n    })\n     // noteList.push([note.noteId,note.category,note.noteText, dateFormatter(note.saveDate)]);\n  \n    return noteList;\n  }\n\n  getFormattedDate = (rawDate) => {\n    var newDate = new Date(rawDate);\n    const options = {\n      day: 'numeric',\n      month: 'long',\n      weekday: 'short',\n      hour: 'numeric',\n      minute: 'numeric',\n      timeZoneName: 'short',\n      timeZone: 'America/New_York',\n    };\n    var date = newDate.toLocaleString('en-US', options);\n    return date;\n  }\n\n  closeSnackBar = () => {\n    this.setState({snackBarOpen: false});\n  }\n\n  closeNote = () => {\n      this.setState({openNote: false});\n  }\n\n  render() {\n   \n    return (\n      <MuiThemeProvider>\n        <div className=\"App\">\n          <AppBar title=\"Notes\">\n            <MenuItem onClick={this.createUpdateNote} value={''} primaryText=\"Create Note\"/>\n          </AppBar> \n          <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            key={`${this.state.vertical}, ${this.state.horizontal}`}\n            open={this.state.snackBarOpen}\n            autoHideDuration={2000}\n            onClose={this.closeSnackBar}\n          >\n           <MuiAlert elevation={6} variant=\"filled\" {...this.state.props}>\n            \"Success! Note saved.\"\n           </MuiAlert>\n          </Snackbar>\n          <LoginComponent \n            openLogin={this.state.openLogin}\n            handleSuccess={this.handleLoginSuccess}\n          />\n        \n         { !this.state.isNoteListHidden && \n         <NoteListComponent \n          handleSuccess={this.refreshNoteList} \n          userToken={this.state.userToken} \n          notes={this.state.noteList}\n          createUpdateNote={this.createUpdateNote}/>}\n        <NoteComponent \n          user={this.state.userToken} \n          openNote={this.state.openNote}\n          handleSuccess={this.handleSaveSuccess}\n          noteModel={this.state.noteModel}\n          handleClose={this.closeNote}\n        />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}